{"version":3,"sources":["components/Search/styles.js","redux/reducers/search.js","redux/actions/searchActions.js","components/Search/index.js","components/Header/styles.js","components/Header/index.js","GlobalStyle.js","services/gistService.js","utils/common-utils.js","constants/styling-constants.js","components/GistActionButton/styles.js","components/GistActionButton/index.js","components/Gist/styles.js","components/Gist/index.js","components/GistList/styles.js","redux/reducers/gistList.js","redux/actions/gistListActions.js","components/GistList/index.js","App.js","redux/store/index.js","index.js"],"names":["Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","InputBox","_templateObject2","Input","input","_templateObject3","searchSlice","createSlice","name","initialState","reducers","EnterText","state","action","payload","actions","Search","enteredText","useSelector","search","dispatch","useDispatch","_jsx","children","_jsxs","Octicon","type","value","placeholder","onChange","e","target","Header","mega","GlobalStyles","createGlobalStyle","octokit","Octokit","isUndefinedNullEmptyString","undefined","appSchemeText","GistActionAnchorContainer","a","GistActionTextContainer","GistActionButtonText","GistActionButton","_ref","text","icon","url","_Fragment","href","UserContainer","ProfileContainer","ButtonContainer","_templateObject4","TimestampContainer","_templateObject5","UpdatedDate","_templateObject6","AvatarImage","img","_templateObject7","UsernameContainer","_templateObject8","GistDescription","_templateObject9","FileListContainer","_templateObject10","FileListWrapper","_templateObject11","FileListText","_templateObject12","BiDirectionalArrowRightWrapper","_templateObject13","Gist","gist","iconsArray","concat","Object","keys","files","length","GoChevronLeft","GoChevronRight","GoRepoForked","forks_url","GoComment","comments_url","GoStar","owner","starred_url","src","avatar_url","alt","login","map","item","Date","created_at","toLocaleDateString","updated_at","description","fileKey","raw_url","GoFile","filename","Spinner","gistListSlice","Save","GetList","_gistListSlice$action","GistList","gistData","gistList","searchText","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","useEffect","gists","listPublic","then","result","data","catch","err","id","toLowerCase","includes","App","className","configureStore","reducer","gistListReducer","ReactDOM","render","React","StrictMode","Provider","store","document","getElementById"],"mappings":"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","file":"static/js/main.9e4fa0f8.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  padding: 8px;\n  background-color: #ffffff;\n  font-size: 14px;\n  line-height: 1.5;\n  border-radius: 6px;\n  margin: 0 16px;\n`;\n\nconst InputBox = styled.div`\n  border-radius: 4px;\n  display: flex;\n  width: 400px;\n`;\n\nconst Input = styled.input`\n  border: none;\n  width: 100%;\n  font-size: 16px;\n\n  &:focus {\n    outline: 0;\n  }\n`;\n\nexport { Wrapper, InputBox, Input };\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const searchSlice = createSlice({\n  name: \"search\",\n  initialState: \"\",\n  reducers: {\n    EnterText: (state, action) => {\n      return (state = action.payload);\n    },\n  },\n});\n\nexport default searchSlice.reducer;\n","import { searchSlice } from \"../reducers/search\";\n\nexport const { EnterText } = searchSlice.actions;\n","import React from \"react\";\nimport Octicon from \"react-octicon\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Wrapper, InputBox, Input } from \"./styles\";\nimport { EnterText } from \"../../redux/actions/searchActions\";\n\nconst Search = () => {\n  const enteredText = useSelector((state) => state.search);\n  const dispatch = useDispatch();\n\n  return (\n    <Wrapper>\n      <InputBox>\n        <Octicon name=\"search\" />\n        <Input\n          type=\"text\"\n          value={enteredText}\n          placeholder=\"Search Gists for the username\"\n          onChange={(e) => dispatch(EnterText(e.target.value))}\n        />\n      </InputBox>\n    </Wrapper>\n  );\n};\n\nexport default Search;\n","import styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  background-color: #24292e;\n  color: #ffffff;\n  z-index: 32;\n  padding: 16px;\n  font-size: 14px;\n  line-height: 1.5;\n  display: flex;\n  align-items: center;\n`;\n\nexport { Wrapper };\n","import React from \"react\";\nimport Octicon from \"react-octicon\";\nimport Search from \"../Search\";\nimport { Wrapper } from \"./styles\";\n\nfunction Header() {\n  return (\n    <Wrapper>\n      <Octicon name=\"mark-github\" mega />\n      <Search />\n    </Wrapper>\n  );\n}\n\nexport default Header;\n","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyles = createGlobalStyle`\n  body{\n    margin: 0;\n    font-family: Helvetica Neue,Helvetica,Segoe UI,Arial,freesans,sans-serif;\n    color: #626465;\n  }\n  *{\n    box-sizing: border-box;\n  }\n`;\n\nexport default GlobalStyles;\n","import { Octokit } from \"@octokit/rest\";\nconst octokit = new Octokit();\n\nexport const getPublicGists = () => octokit.gists.listPublic();\n\nexport const getGistForUser = (username) =>\n  octokit.gists.listForUser({ username });\n","export const isUndefinedNullEmptyString = (value) => {\n  return value === undefined || value === null || value === \"\";\n};\n","const appSchemeText = \"rgb(10, 76, 205)\";\n\nexport { appSchemeText };\n","import styled from \"styled-components\";\nimport { appSchemeText } from \"../../constants/styling-constants\";\n\nconst GistActionAnchorContainer = styled.a`\n  display: flex;\n  align-items: center;\n  text-align: center;\n  color: ${appSchemeText};\n  margin-left: 15px;\n  text-decoration: none;\n`;\n\nconst GistActionTextContainer = styled.div`\n  display: flex;\n  align-items: center;\n  text-align: center;\n  color: ${appSchemeText};\n  margin-left: 15px;\n  text-decoration: none;\n`;\n\nconst GistActionButtonText = styled.div`\n  margin-left: 5px;\n`;\n\nexport {\n  GistActionAnchorContainer,\n  GistActionTextContainer,\n  GistActionButtonText,\n};\n","import React from \"react\";\nimport { isUndefinedNullEmptyString } from \"../../utils/common-utils\";\nimport {\n  GistActionTextContainer,\n  GistActionAnchorContainer,\n  GistActionButtonText,\n} from \"./styles\";\n\nconst GistActionButton = ({ text, icon, url }) => {\n  return (\n    <>\n      {isUndefinedNullEmptyString(url) ? (\n        <GistActionTextContainer href={url} target=\"_blank\">\n          {icon}\n          <GistActionButtonText>{text}</GistActionButtonText>\n        </GistActionTextContainer>\n      ) : (\n        <GistActionAnchorContainer href={url} target=\"_blank\">\n          {icon}\n          <GistActionButtonText>{text}</GistActionButtonText>\n        </GistActionAnchorContainer>\n      )}\n    </>\n  );\n};\n\nexport default GistActionButton;\n","import styled from \"styled-components\";\nimport { appSchemeText } from \"../../constants/styling-constants\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-bottom: 1px solid rgb(233, 236, 238);\n  padding: 15px 15px 40px 15px;\n`;\n\nconst UserContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst ProfileContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst TimestampContainer = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 12px;\n  margin-top: 5px;\n`;\n\nconst UpdatedDate = styled.div`\n  margin-left: 12px;\n`;\n\nconst AvatarImage = styled.img`\n  height: 30px;\n  width: 30px;\n  border-radius: 50%;\n`;\n\nconst UsernameContainer = styled.a`\n  margin-left: 10px;\n  color: ${appSchemeText};\n  text-decoration: none;\n`;\n\nconst GistDescription = styled.div`\n  margin-top: 15px;\n  font-weight: 450;\n`;\n\nconst FileListContainer = styled.a`\n  display: flex;\n  align-items: center;\n  color: ${appSchemeText};\n  margin-left: 10px;\n  text-decoration: none;\n`;\n\nconst FileListWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 15px;\n`;\n\nconst FileListText = styled.div`\n  margin-left: 5px;\n`;\n\nconst BiDirectionalArrowRightWrapper = styled.div`\n  margin-left: -5px;\n  margin-right: -2px;\n  display: flex;\n  align-items: center;\n`;\n\nexport {\n  Wrapper,\n  UserContainer,\n  ProfileContainer,\n  ButtonContainer,\n  TimestampContainer,\n  AvatarImage,\n  UsernameContainer,\n  GistDescription,\n  FileListContainer,\n  FileListWrapper,\n  FileListText,\n  UpdatedDate,\n  BiDirectionalArrowRightWrapper,\n};\n","import React from \"react\";\nimport GistActionButton from \"../GistActionButton\";\nimport {\n  Wrapper,\n  UserContainer,\n  ProfileContainer,\n  ButtonContainer,\n  TimestampContainer,\n  AvatarImage,\n  UsernameContainer,\n  GistDescription,\n  FileListContainer,\n  FileListWrapper,\n  FileListText,\n  UpdatedDate,\n  BiDirectionalArrowRightWrapper,\n} from \"./styles\";\nimport {\n  GoRepoForked,\n  GoComment,\n  GoStar,\n  GoChevronLeft,\n  GoChevronRight,\n  GoFile,\n} from \"react-icons/go\";\n\nconst Gist = ({ gist }) => {\n  // console.log(gist);\n  // Adding Icons to an array, so adding icons in future is easier and straightforward\n  const iconsArray = [\n    {\n      text: `${Object.keys(gist.files).length} files`,\n      icon: (\n        <>\n          <GoChevronLeft />\n          <BiDirectionalArrowRightWrapper>\n            <GoChevronRight />\n          </BiDirectionalArrowRightWrapper>\n        </>\n      ),\n      url: \"\",\n    },\n    { text: \"Forks\", icon: <GoRepoForked />, url: gist.forks_url },\n    { text: \"Comments\", icon: <GoComment />, url: gist.comments_url },\n    { text: \"Stars\", icon: <GoStar />, url: gist.owner.starred_url },\n  ];\n\n  return (\n    <Wrapper>\n      <UserContainer>\n        <ProfileContainer>\n          <AvatarImage src={gist.owner.avatar_url} alt=\"Profile Image\" />\n          <UsernameContainer href={gist.owner.url} target=\"_blank\">\n            {gist.owner.login}\n          </UsernameContainer>\n        </ProfileContainer>\n        <ButtonContainer>\n          {iconsArray.map((item) => {\n            return (\n              <GistActionButton\n                key={item.text}\n                text={item.text}\n                icon={item.icon}\n                url={item.url}\n              />\n            );\n          })}\n        </ButtonContainer>\n      </UserContainer>\n      <TimestampContainer>\n        <div>\n          Created at: {new Date(gist.created_at).toLocaleDateString(\"en-GB\")}\n        </div>\n        <UpdatedDate>\n          Last updated: {new Date(gist.updated_at).toLocaleDateString(\"en-GB\")}\n        </UpdatedDate>\n      </TimestampContainer>\n      <GistDescription>{gist.description}</GistDescription>\n      <FileListWrapper>\n        {Object.keys(gist.files).map((fileKey) => {\n          return (\n            <FileListContainer\n              key={fileKey}\n              href={gist.files[fileKey].raw_url}\n              target=\"_blank\"\n            >\n              <GoFile />\n              <FileListText key={fileKey}>\n                {gist.files[fileKey].filename}\n              </FileListText>\n            </FileListContainer>\n          );\n        })}\n      </FileListWrapper>\n    </Wrapper>\n  );\n};\n\nexport default Gist;\n","import styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  font-size: 14px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  max-width: 600px;\n  margin: auto;\n`;\n\nconst Spinner = styled.div`\n  width: 50px;\n  height: 50px;\n  border: 10px solid #f3f3f3;\n  border-top: 10px solid #383636;\n  border-radius: 50%;\n  animation: spinner 1.5s linear infinite;\n  align-self: center;\n  justify-self: center;\n  margin-top: 20px;\n\n  @keyframes spinner {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nexport { Wrapper, Spinner };\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const gistListSlice = createSlice({\n  name: \"gistList\",\n  initialState: [],\n  reducers: {\n    Save: (state, action) => {\n      return (state = action.payload);\n    },\n    GetList: (state, action) => {\n      return state;\n    },\n  },\n});\n\nexport default gistListSlice.reducer;\n","import { gistListSlice } from \"../reducers/gistList\";\n\nexport const { Save, GetList } = gistListSlice.actions;\n","import React, { useEffect, useState } from \"react\";\nimport { getPublicGists } from \"../../services/gistService\";\nimport Gist from \"../Gist\";\n// import dummyData from \"../../dummy-data\";\nimport { Wrapper, Spinner } from \"./styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Save } from \"../../redux/actions/gistListActions\";\nimport { isUndefinedNullEmptyString } from \"../../utils/common-utils\";\n\nconst GistList = () => {\n  const dispatch = useDispatch();\n  const gistData = useSelector((state) => state.gistList);\n  const searchText = useSelector((state) => state.search);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    if (gistData && gistData.length < 1) {\n      setLoading(true);\n      getPublicGists()\n        .then((result) => {\n          if (result.data.length > 0) {\n            dispatch(Save(result.data));\n          }\n          setLoading(false);\n        })\n        .catch((err) => setError(true), setLoading(false));\n    }\n  }, [gistData, dispatch]);\n\n  return (\n    <Wrapper>\n      {loading ? (\n        <Spinner></Spinner>\n      ) : error ? (\n        <div>Oops. Something went wrong.</div>\n      ) : (\n        gistData &&\n        gistData.map((item) => {\n          if (isUndefinedNullEmptyString(searchText)) {\n            return <Gist key={item.id} gist={item} />;\n          } else if (\n            !isUndefinedNullEmptyString(searchText) &&\n            !isUndefinedNullEmptyString(item.owner) &&\n            !isUndefinedNullEmptyString(item.owner.login) &&\n            item.owner.login.toLowerCase().includes(searchText.toLowerCase())\n          ) {\n            return <Gist key={item.id} gist={item} />;\n          } else {\n            return null;\n          }\n        })\n      )}\n    </Wrapper>\n  );\n};\n\nexport default GistList;\n","import styled from \"styled-components\";\nimport Header from \"./components/Header\";\nimport GlobalStyles from \"./GlobalStyle\";\nimport GistList from \"./components/GistList\";\n\nconst App = () => {\n  return (\n    <Wrapper className=\"App\" data-testid=\"app\">\n      <GlobalStyles />\n      <Header />\n      <GistList />\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  font-size: 14px;\n  line-height: 1.5;\n`;\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport gistListReducer from \"../reducers/gistList\";\nimport search from \"../reducers/search\";\n\nexport default configureStore({\n  reducer: {\n    gistList: gistListReducer,\n    search: search,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}